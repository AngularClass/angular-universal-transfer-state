/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core';
import * as import1 from './transfer-state';
import * as import2 from '@angular/http';
class TransferHttpModuleInjector extends import0.ÉµNgModuleInjector<import1.TransferHttpModule> {
  _TransferHttpModule_0:import1.TransferHttpModule;
  __TransferHttp_1:import1.TransferHttp;
  constructor(parent:import0.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _TransferHttp_1():import1.TransferHttp {
    if ((this.__TransferHttp_1 == null)) { (this.__TransferHttp_1 = new import1.TransferHttp(this.parent.get(import2.Http),this.parent.get(import1.TransferState))); }
    return this.__TransferHttp_1;
  }
  createInternal():import1.TransferHttpModule {
    this._TransferHttpModule_0 = new import1.TransferHttpModule();
    return this._TransferHttpModule_0;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import1.TransferHttpModule)) { return this._TransferHttpModule_0; }
    if ((token === import1.TransferHttp)) { return this._TransferHttp_1; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const TransferHttpModuleNgFactory:import0.NgModuleFactory<import1.TransferHttpModule> = new import0.NgModuleFactory<any>(TransferHttpModuleInjector,import1.TransferHttpModule);